{"last_node_id":42,"last_link_id":79,"nodes":[{"id":2,"type":"Text/Text","pos":[640,7],"size":{"0":210,"1":58},"flags":{},"order":0,"execution_priority":"1","mode":0,"inputs":[{"name":"in","type":"string","link":null}],"outputs":[{"name":"out","type":"string","links":[1,59],"slot_index":0}],"title":"API URL","properties":{"value":"http://192.168.3.138:5000"}},{"id":7,"type":"Text/Text","pos":[638,132],"size":{"0":210,"1":58},"flags":{},"order":1,"execution_priority":"1","mode":0,"inputs":[{"name":"in","type":"string","link":null}],"outputs":[{"name":"out","type":"string","links":[6,58],"slot_index":0}],"title":"Dummy API Key","properties":{"value":"x"}},{"id":3,"type":"Text/Text","pos":[641,263],"size":{"0":210,"1":58},"flags":{},"order":2,"execution_priority":"1","mode":0,"inputs":[{"name":"in","type":"string","link":null}],"outputs":[{"name":"out","type":"string","links":[2,57],"slot_index":0}],"title":"Model Location","properties":{"value":"../../models/text/openhermes-2.5-neural-chat-v3-3-slerp.Q5_K_M.gguf"}},{"id":5,"type":"Text/Text","pos":[610.6980931008009,-808],"size":{"0":210,"1":58},"flags":{},"order":3,"execution_priority":"1","mode":0,"inputs":[{"name":"in","type":"string","link":null}],"outputs":[{"name":"out","type":"string","links":[17],"slot_index":0}],"title":"Extract Entity Prompt","properties":{"value":"Please extract all entities in the text which comes after the tag: *text*. You will output a list of entities as a JSON array. *text*"}},{"id":34,"type":"Text/Text","pos":[1820,-490],"size":{"0":210,"1":58},"flags":{},"order":8,"execution_priority":"40","mode":0,"inputs":[{"name":"in","type":"string","link":null}],"outputs":[{"name":"out","type":"string","links":[67],"slot_index":0}],"title":"Relation Prompt 2","properties":{"value":"You will consider every combination of two entities from this array of entities. You will only use the entities present in the above JSON array. You will output each Entity / Relation triple as a JSON Object. The format of the JSON Object is:  { \"Source Entity\": \"\" \"Relation\": \"\" \"Target Entity\": \"\" }  This is an example of an Entity / Relation triple:  { \"Source Entity\": \"European Artificial Intelligence Board\" \"Relation\": \"responsible for\" \"Target Entity\": \"advisory tasks\" }  This is another example of an Entity / Relation triple  { \"Source Entity\": \"Member State\" \"Relation\": \"designates\" \"Target Entity\": \"national supervisory authority\" }  You will output a JSON array of Entity / Relation triple JSON objects.  *text*"}},{"id":31,"type":"Text/Text","pos":[1812,-798],"size":{"0":210,"1":58},"flags":{},"order":9,"execution_priority":"40","mode":0,"inputs":[{"name":"in","type":"string","link":null}],"outputs":[{"name":"out","type":"string","links":[65],"slot_index":0}],"title":"Relation Prompt","properties":{"value":"Please use the following JSON array of entities to analyse Entity / Relation triples in the text which comes after the tag: *text*:"}},{"id":35,"type":"Text/Concatenate Text","pos":[2435,-506],"size":{"0":210,"1":102},"flags":{},"order":11,"execution_priority":"60","mode":0,"inputs":[{"name":"first","type":"string","link":66},{"name":"last","type":"string","link":67}],"outputs":[{"name":"out","type":"string","links":[68],"slot_index":0}],"properties":{"first":"Please use the following JSON array of entities to analyse Entity / Relation triples in the text which comes after the tag: *text*: [\n  {\n    \"entity\": \"Food Safety and Inspection Service\"\n  },\n  {\n    \"entity\": \"United States Department of Agriculture\"\n  },\n  {\n    \"entity\": \"Animal and Plant Health Inspection Service\"\n  }\n]\n","last":"You will consider every combination of two entities from this array of entities. You will only use the entities present in the above JSON array. You will output each Entity / Relation triple as a JSON Object. The format of the JSON Object is:  { \"Source Entity\": \"\" \"Relation\": \"\" \"Target Entity\": \"\" }  This is an example of an Entity / Relation triple:  { \"Source Entity\": \"European Artificial Intelligence Board\" \"Relation\": \"responsible for\" \"Target Entity\": \"advisory tasks\" }  This is another example of an Entity / Relation triple  { \"Source Entity\": \"Member State\" \"Relation\": \"designates\" \"Target Entity\": \"national supervisory authority\" }  You will output a JSON array of Entity / Relation triple JSON objects.  *text*"}},{"id":30,"type":"Text/Text","pos":[2707,-782],"size":{"0":210,"1":58},"flags":{},"order":12,"execution_priority":"70","mode":0,"inputs":[{"name":"in","type":"string","link":null}],"outputs":[{"name":"out","type":"string","links":[72],"slot_index":0}],"title":"Relation Persona","properties":{"value":"You are a member of a team that builds knowledge graphs out of regulatory texts. Your job is to analyse a text and extract Entity / Relation triples. Relations will be between pairs of entities. You will use a list of entities as the basis of your analysis. You know that a relation will be in one direction only. A relation will be from a source entity to a target entity. More than one relation may exist between two entities. You will generate your output as an array of JSON objects. "}},{"id":36,"type":"Text/Concatenate Text","pos":[2745,-315],"size":{"0":210,"1":102},"flags":{},"order":13,"execution_priority":"70","mode":0,"inputs":[{"name":"first","type":"string","link":68},{"name":"last","type":"string","link":78}],"outputs":[{"name":"out","type":"string","links":[71],"slot_index":0}],"properties":{"first":"Please use the following JSON array of entities to analyse Entity / Relation triples in the text which comes after the tag: *text*: [\n  {\n    \"entity\": \"Food Safety and Inspection Service\"\n  },\n  {\n    \"entity\": \"United States Department of Agriculture\"\n  },\n  {\n    \"entity\": \"Animal and Plant Health Inspection Service\"\n  }\n]\n You will consider every combination of two entities from this array of entities. You will only use the entities present in the above JSON array. You will output each Entity / Relation triple as a JSON Object. The format of the JSON Object is:  { \"Source Entity\": \"\" \"Relation\": \"\" \"Target Entity\": \"\" }  This is an example of an Entity / Relation triple:  { \"Source Entity\": \"European Artificial Intelligence Board\" \"Relation\": \"responsible for\" \"Target Entity\": \"advisory tasks\" }  This is another example of an Entity / Relation triple  { \"Source Entity\": \"Member State\" \"Relation\": \"designates\" \"Target Entity\": \"national supervisory authority\" }  You will output a JSON array of Entity / Relation triple JSON objects.  *text*","last":"This explanatory memorandum accompanies the proposal for a Regulation laying down harmonised rules on artificial intelligence (Artificial Intelligence Act). Artificial Intelligence (AI) is a fast evolving family of technologies that can bring a wide array of economic and societal benefits across the entire spectrum of industries and social activities. By improving prediction, optimising operations and resource allocation, and personalising service delivery, the use of artificial intelligence can support socially and environmentally beneficial outcomes and provide key competitive advantages to companies and the European economy. Such action is especially needed in high-impact sectors, including climate change, environment and health, the public sector, finance, mobility, home affairs and agriculture. However, the same elements and techniques that power the socio-economic benefits of AI can also bring about new risks or negative consequences for individuals or the society. In light of the speed of technological change and possible challenges, the EU is committed to strive for a balanced approach. It is in the Union interest to preserve the EU's technological leadership and to ensure that Europeans can benefit from new technologies developed and functioning according to Union values, fundamental rights and principles."}},{"id":4,"type":"Text/Text","pos":[1122.6980931008015,-808],"size":{"0":210,"1":58},"flags":{},"order":6,"execution_priority":"20","mode":0,"inputs":[{"name":"in","type":"string","link":null}],"outputs":[{"name":"out","type":"string","links":[3],"slot_index":0}],"title":"Entity Ex Jnr Persona ","properties":{"value":"You are a member of a team that builds knowledge graphs out of regulatory texts. Your job on this team is to extract entities from regulatory texts. You know that entities consist of nouns and adjectives only. You generate your output in a JSON array."}},{"id":6,"type":"IO/Text Output","pos":[3593,-160],"size":{"0":210,"1":102},"flags":{},"order":15,"execution_priority":"90","mode":0,"inputs":[{"name":"in","type":"string","link":79},{"name":"clear event","type":"string","link":null,"slot_index":1}],"title":"triples","properties":{"text":"","clear_event":"","last_clear_event":""}},{"id":15,"type":"Text/Concatenate Text","pos":[902,-615],"size":{"0":210,"1":102},"flags":{},"order":5,"execution_priority":"10","mode":0,"inputs":[{"name":"first","type":"string","link":17},{"name":"last","type":"string","link":76,"slot_index":1}],"outputs":[{"name":"out","type":"string","links":[14],"slot_index":0}],"properties":{"first":"Please extract all entities in the text which comes after the tag: *text*. You will output a list of entities as a JSON array. *text*","last":"This explanatory memorandum accompanies the proposal for a Regulation laying down harmonised rules on artificial intelligence (Artificial Intelligence Act). Artificial Intelligence (AI) is a fast evolving family of technologies that can bring a wide array of economic and societal benefits across the entire spectrum of industries and social activities. By improving prediction, optimising operations and resource allocation, and personalising service delivery, the use of artificial intelligence can support socially and environmentally beneficial outcomes and provide key competitive advantages to companies and the European economy. Such action is especially needed in high-impact sectors, including climate change, environment and health, the public sector, finance, mobility, home affairs and agriculture. However, the same elements and techniques that power the socio-economic benefits of AI can also bring about new risks or negative consequences for individuals or the society. In light of the speed of technological change and possible challenges, the EU is committed to strive for a balanced approach. It is in the Union interest to preserve the EU's technological leadership and to ensure that Europeans can benefit from new technologies developed and functioning according to Union values, fundamental rights and principles."}},{"id":32,"type":"Text/Concatenate Text","pos":[2096,-657],"size":{"0":210,"1":102},"flags":{},"order":10,"execution_priority":"50","mode":0,"inputs":[{"name":"first","type":"string","link":65},{"name":"last","type":"string","link":77}],"outputs":[{"name":"out","type":"string","links":[66],"slot_index":0}],"properties":{"first":"Please use the following JSON array of entities to analyse Entity / Relation triples in the text which comes after the tag: *text*:","last":""}},{"id":39,"type":"IO/Text Input","pos":[629,-238],"size":{"0":210,"1":58},"flags":{},"order":4,"execution_priority":"1","mode":0,"outputs":[{"name":"out","type":"string","links":[76,78],"slot_index":0}],"title":"clause_in","properties":{"text":""}},{"id":33,"type":"LLM/GPT","pos":[3097,-238],"size":{"0":210,"1":182},"flags":{},"order":14,"execution_priority":"80","mode":0,"inputs":[{"name":"system","type":"string","link":72},{"name":"user","type":"string","link":71},{"name":"server url","type":"string","link":59},{"name":"api key","type":"string","link":58},{"name":"model","type":"string","link":57},{"name":"clear","type":-1,"link":null,"slot_index":5}],"outputs":[{"name":"out","type":"string","links":[79],"slot_index":0},{"name":"buffer","type":"string","links":null}],"properties":{"server_url":"http://192.168.3.138:5000","api_key":"x","buffer_length":0,"chat_buffer":[],"model":"../../models/text/openhermes-2.5-neural-chat-v3-3-slerp.Q5_K_M.gguf","last_user_input":"","last_output":""}},{"id":1,"type":"LLM/GPT","pos":[1398.6980931008015,-631],"size":{"0":210,"1":182},"flags":{},"order":7,"execution_priority":"30","mode":0,"inputs":[{"name":"system","type":"string","link":3},{"name":"user","type":"string","link":14},{"name":"server url","type":"string","link":1},{"name":"api key","type":"string","link":6},{"name":"model","type":"string","link":2},{"name":"clear","type":-1,"link":null,"slot_index":5}],"outputs":[{"name":"out","type":"string","links":[77],"slot_index":0},{"name":"buffer","type":"string","links":[],"slot_index":1}],"properties":{"server_url":"http://192.168.3.138:5000","api_key":"x","buffer_length":0,"chat_buffer":[],"model":"../../models/text/openhermes-2.5-neural-chat-v3-3-slerp.Q5_K_M.gguf","last_user_input":"","last_output":""}}],"links":[[1,2,0,1,2,"string"],[2,3,0,1,4,"string"],[3,4,0,1,0,"string"],[6,7,0,1,3,"string"],[14,15,0,1,1,"string"],[17,5,0,15,0,"string"],[57,3,0,33,4,"string"],[58,7,0,33,3,"string"],[59,2,0,33,2,"string"],[65,31,0,32,0,"string"],[66,32,0,35,0,"string"],[67,34,0,35,1,"string"],[68,35,0,36,0,"string"],[71,36,0,33,1,"string"],[72,30,0,33,0,"string"],[76,39,0,15,1,"string"],[77,1,0,32,1,"string"],[78,39,0,36,1,"string"],[79,33,0,6,0,"string"]],"groups":[{"title":"LLM Configuration","bounding":[575,-97,370,520],"color":"#a1309b"},{"title":"Entity Extraction","bounding":[579,-965,1117,584],"color":"#88A"},{"title":"Entity Relation Entity Triple Extractor","bounding":[1733,-964,1703,975],"color":"#3f789e"},{"title":"Input From API","bounding":[576,-334,360,209],"color":"#8A8"},{"title":"Output to API","bounding":[3501,-255,404,267],"color":"#A88"}],"config":{},"extra":{},"version":0.4}